/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dto.ProductoDTO;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import dao.ProductoFDAO;
import dto.PeliculasDTO;

/**
 *
 * @author 7053
 */
public class ProductoView extends javax.swing.JFrame {
    private PeliculasDTO dto;
    private ProductoFDAO dao;
    /**
     * Creates new form ProductoView
     */
    public ProductoView() {
        try {
            initComponents();
            dao=new ProductoFDAO();
        } catch (IOException ex) {
            Logger.getLogger(ProductoView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, " NO SE ENCUENTRA EL ARCHIVO "+ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtAño = new javax.swing.JTextField();
        txtEstudio = new javax.swing.JTextField();
        btnInsertar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaListado = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtGenero = new javax.swing.JTextField();
        txtPais = new javax.swing.JTextField();
        txtDirector = new javax.swing.JTextField();
        txtDuracion = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtClasificacion = new javax.swing.JTextField();

        jLabel2.setText("jLabel2");

        jTextField3.setText("jTextField3");

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(420, 440));
        getContentPane().setLayout(null);

        jLabel3.setText("Nombre");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 50, 60, 14);

        jLabel4.setText("Año");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 80, 60, 14);

        jLabel5.setText("Estudio");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 260, 90, 14);

        txtId.setColumns(3);
        getContentPane().add(txtId);
        txtId.setBounds(120, 20, 100, 25);

        txtNombre.setColumns(20);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        getContentPane().add(txtNombre);
        txtNombre.setBounds(120, 50, 100, 25);
        getContentPane().add(txtAño);
        txtAño.setBounds(120, 80, 100, 25);

        txtEstudio.setColumns(3);
        getContentPane().add(txtEstudio);
        txtEstudio.setBounds(120, 260, 100, 25);

        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        getContentPane().add(btnInsertar);
        btnInsertar.setBounds(320, 20, 80, 23);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(320, 60, 80, 23);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar);
        btnEditar.setBounds(320, 100, 80, 23);

        btnEliminar.setText("Borrar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar);
        btnEliminar.setBounds(320, 140, 80, 23);

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        getContentPane().add(btnListar);
        btnListar.setBounds(320, 230, 80, 60);

        txaListado.setColumns(20);
        txaListado.setRows(5);
        jScrollPane1.setViewportView(txaListado);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 330, 370, 160);

        jLabel6.setText("Id");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 20, 60, 14);

        jLabel7.setText("Género");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 110, 60, 14);

        jLabel8.setText("País");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(30, 140, 60, 14);

        jLabel9.setText("Director");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(30, 170, 60, 14);

        jLabel10.setText("Duración");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(30, 200, 60, 14);

        txtGenero.setColumns(3);
        txtGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGeneroActionPerformed(evt);
            }
        });
        getContentPane().add(txtGenero);
        txtGenero.setBounds(120, 110, 100, 25);

        txtPais.setColumns(3);
        getContentPane().add(txtPais);
        txtPais.setBounds(120, 140, 100, 25);

        txtDirector.setColumns(3);
        getContentPane().add(txtDirector);
        txtDirector.setBounds(120, 170, 100, 25);

        txtDuracion.setColumns(3);
        getContentPane().add(txtDuracion);
        txtDuracion.setBounds(120, 200, 100, 25);

        jLabel11.setText("Clasificación");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(30, 230, 90, 14);

        txtClasificacion.setColumns(3);
        getContentPane().add(txtClasificacion);
        txtClasificacion.setBounds(120, 230, 100, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean validaciones(){
        int i=0;
        String[] datosDePelicula={"id","Nombre","Año","Género","País","Director","Duración","Clasificación","Estudio"};
        try{
            Long.parseLong(txtId.getText());
            i++;
            if(txtNombre.getText().equals("") || txtNombre.getText().contains(",") || txtNombre.getText(0, 1).contains(" ")){
                JOptionPane.showMessageDialog(null, "ingrese un nombre correcto");
                return false;
            }
            i++;
            if(Integer.parseInt(txtAño.getText())<1800){
                JOptionPane.showMessageDialog(null, "ingrese un año correcto");
                return false;
            }
            i++;
            if(txtGenero.getText().equals("") || txtGenero.getText().contains(",") || txtGenero.getText(0, 1).contains(" ")){
                JOptionPane.showMessageDialog(null, "ingrese un género correcto");
                return false;
            }
            i++;
            if(txtPais.getText().equals("") || txtPais.getText().contains(",") || txtPais.getText(0, 1).contains(" ")){
                JOptionPane.showMessageDialog(null, "ingrese un país correcto");
                return false;
            }
            i++;
            if(txtDirector.getText().equals("") || txtDirector.getText().contains(",") || txtDirector.getText(0, 1).contains(" ")){
                JOptionPane.showMessageDialog(null, "ingrese un nombre de director correcto");
                return false;
            }
            i++;
            if(Integer.parseInt(txtDuracion.getText())<1){
                JOptionPane.showMessageDialog(null, "ingrese una duración correcta");
                return false;
            }
            i++;
            if(txtClasificacion.getText().equals("") || txtClasificacion.getText().contains(",") || txtClasificacion.getText(0, 1).contains(" ")){
                JOptionPane.showMessageDialog(null, "ingrese una clasificación correcta");
                return false;
            }
            i++;
            if(txtEstudio.getText().equals("") || txtEstudio.getText().contains(",") || txtEstudio.getText(0, 1).contains(" ")){
                JOptionPane.showMessageDialog(null, "ingrese un nombre de estudio correcto");
                return false;
            }
            i++;
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "se ha ingresado un valor incorrecto en "+datosDePelicula[i]);
        }
        return true;
    }
    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        
            
        if(validaciones()){
            
            
        
            dto=new PeliculasDTO();
            dto.setId(Long.parseLong(txtId.getText()));
            dto.setNombre(new StringBuffer(txtNombre.getText()));
            dto.setAño(Integer.parseInt(txtAño.getText()));
            dto.setGenero(new StringBuffer(txtGenero.getText()));
            dto.setPais(new StringBuffer(txtPais.getText()));
            dto.setDirector(new StringBuffer(txtDirector.getText()));
            dto.setDuracion(Integer.parseInt(txtDuracion.getText()));
            dto.setClasificacion(new StringBuffer(txtClasificacion.getText()));
            dto.setEstudio(new StringBuffer(txtEstudio.getText()));
            try {
                if(dao.agregar(dto)){
                    JOptionPane.showMessageDialog(this, " INSERTADO ");
                }else{
                    JOptionPane.showMessageDialog(this, " NO SE PUDO INSERTAR ");
                }
            } catch (IOException ex) {
                Logger.getLogger(ProductoView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        String Id=null;
        dto=new PeliculasDTO();
        //System.out.println(dto);
        try{
            Id=JOptionPane.showInputDialog(" Id a buscar ");
            dto.setId(Long.parseLong(Id));
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Id no coincide con ningún registro");
            return;
        }
        try {
            dto=dao.obtenerPorId(dto);
            if(dto==null){
                JOptionPane.showMessageDialog(this, "Id no coincide con ningún registro");
            }else{
                txtId.setText(String.valueOf(dto.getId()));
                txtNombre.setText(dto.getNombre().toString());
                txtAño.setText(String.valueOf(dto.getAño()));
                txtGenero.setText(dto.getGenero().toString());
                txtPais.setText(dto.getPais().toString());
                txtDirector.setText(dto.getDirector().toString());
                txtDuracion.setText(dto.getDuracion().toString());
                txtClasificacion.setText(dto.getClasificacion().toString());
                txtEstudio.setText(String.valueOf(dto.getEstudio()));
            }
        } catch (IOException ex) {
            Logger.getLogger(ProductoView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProductoView.class.getName()).log(Level.SEVERE, null, ex);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Id no coincide con ningún registro");
       
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
//        dto=new ProductoDTO();
        if(validaciones()){
            dto.setId(Long.parseLong(txtId.getText()));
            dto.setNombre(new StringBuffer(txtNombre.getText()));
            dto.setAño(Integer.parseInt(txtAño.getText()));
            dto.setGenero(new StringBuffer(txtGenero.getText()));
            dto.setPais(new StringBuffer(txtPais.getText()));
            dto.setDirector(new StringBuffer(txtDirector.getText()));
            dto.setDuracion(Integer.parseInt(txtDuracion.getText()));
            dto.setClasificacion(new StringBuffer(txtClasificacion.getText()));
            dto.setEstudio(new StringBuffer(txtEstudio.getText()));
            try {
                if(dao.actualizar(dto)){
                    JOptionPane.showMessageDialog(this, " EDITADO ");
                }else{
                    JOptionPane.showMessageDialog(this, " NO SE PUDO EDITAR ");
                }
            } catch (IOException ex) {
                Logger.getLogger(ProductoView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String Id=null;
        dto=new PeliculasDTO();
         try{
            Id=JOptionPane.showInputDialog(" Id a buscar ");
            dto.setId(Long.parseLong(Id));
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Id no coincide con ningún registro");
            return;
        }
        try {
            dto=dao.obtenerPorId(dto);
            if(dto==null){
                JOptionPane.showMessageDialog(this, "Id no coincide con ningún registro");
            }else{
            dto=new PeliculasDTO();
            try {
                if(dao.eliminar(dto)){
                    JOptionPane.showMessageDialog(this, " BORRADO ");
                }else{
                    JOptionPane.showMessageDialog(this, " NO SE PUDO BORRAR ");
                }
            } catch (IOException ex) {
                Logger.getLogger(ProductoView.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
         }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Id no coincide con ningún registro");
       
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        try {
            List<PeliculasDTO> lista=dao.obtenerTodos();
            if(lista==null || lista.isEmpty()){
                JOptionPane.showMessageDialog(this, " NO SE ENCONTRO ");
            }else{
                txaListado.setText(lista.toString());
//                txtId.setText(String.valueOf(dto.getId()));
//                txtNombre.setText(dto.getNombre());
//                txtPrecio.setText(String.valueOf(dto.getPrecio()));
//                txtExistencia.setText(String.valueOf(dto.getExistencia()));
            }
        } catch (IOException ex) {
            Logger.getLogger(ProductoView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProductoView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnListarActionPerformed

    private void txtGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGeneroActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextArea txaListado;
    private javax.swing.JTextField txtAño;
    private javax.swing.JTextField txtClasificacion;
    private javax.swing.JTextField txtDirector;
    private javax.swing.JTextField txtDuracion;
    private javax.swing.JTextField txtEstudio;
    private javax.swing.JTextField txtGenero;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPais;
    // End of variables declaration//GEN-END:variables
}
